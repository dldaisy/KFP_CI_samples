steps:
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "build",
        "-t",
        "${_GCR_PATH}/mnist_train:$COMMIT_SHA",
        "-t",
        "${_GCR_PATH}/mnist_train:latest",
        "${_CODE_PATH}/train",
        "-f",
        "${_CODE_PATH}/train/Dockerfile",
      ]
    id: "MnistBuildFirstImage"

  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "build",
        "-t",
        "${_GCR_PATH}/mnist_tensorboard:$COMMIT_SHA",
        "-t",
        "${_GCR_PATH}/mnist_tensorboard:latest",
        "${_CODE_PATH}/tensorboard",
        "-f",
        "${_CODE_PATH}/tensorboard/Dockerfile",
      ]
    id: "MnistBuildSecondImage"


  - name: "python:3.7-slim"
    entrypoint: "/bin/sh"
    args: [
        "-c",
        "cd ${_CODE_PATH};
        pip3 install cffi==1.12.3 --upgrade;
        pip3 install kfp==0.1.37;
        python pipeline.py --commit_id $COMMIT_SHA;
        cp pipeline.py.zip /workspace/pipeline.zip",
      ]
    id: "MnistPackagePipeline"

  - name: "gcr.io/cloud-builders/gsutil"
    args:
      [
        "cp",
        "/workspace/pipeline.zip",
        "gs://${_GS_BUCKET}/$COMMIT_SHA/pipeline.zip"
      ]
    id: "MnistUploadPipeline"
    waitFor: ["MnistPackagePipeline"]


  - name: "python:3.7-slim"
    entrypoint: "/bin/sh"
    args: [
        "-c",
        "cd ${_CODE_PATH};
        pip3 install kfp==0.1.37;
        python create_pipeline_version_and_run.py 
        --tensorboard_bucket gs://${_GS_BUCKET}
        --package_url https://storage.googleapis.com/${_GS_BUCKET}/$COMMIT_SHA/pipeline.zip
        --pipeline_id ${_PIPELINE_ID} 
        --version_name $COMMIT_SHA
        --host ${_HOST_NAME}"
      ]
    id: "MnistCreatePipelineVersionAndRun"

images:
  - "${_GCR_PATH}/mnist_train:$COMMIT_SHA"
  - "${_GCR_PATH}/mnist_train:latest"
  - "${_GCR_PATH}/mnist_tensorboard:$COMMIT_SHA"
  - "${_GCR_PATH}/mnist_tensorboard:latest"

substitutions:
  _CODE_PATH: /workspace/mnist
  _NAMESPACE: kubeflow
  _GCR_PATH: '[YOUR CLOUD REGISTRY], for example: gcr.io/my-project'
  _GS_BUCKET: '[YOUR GS BUCKET TO STORE PIPELINE AND LAUNCH TENSORBOARD], for example: input "my-bucket" if your bucket is "gs://my-bucket"'
  _PIPELINE_ID: '[PIPELINE ID TO CREATE A VERSION ON], get it on kfp UI'
  _HOST_NAME: '[EXTERNAL HOST NAME OF ml-pipeline service], read README.md for more info.'

